@model PremierLeaguePortal.Areas.Administration.Models.BlogViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
<div class="container">

    @using (Html.BeginForm("Create", "Blogs", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
                <h4>Blog</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group form-group-lg">
                    @Html.LabelFor(model => model.Header, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Header, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Header, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SubHeader, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SubHeader, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SubHeader, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.Category, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <h3 class="text-warning">Поради липса на съвместимост валидацията за съдържанието на статията не работи. Моля, имайте предвид, че съдържанието трябва да бъде дълго минимум 200 символа. Проблемът ще бъде решен при първа възможност</h3>
                    @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Content, new { @class = "form-control", rows = "30" })
                        @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.HeaderImageFile, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="file" id="HeaderImageFile" name="HeaderImageFile" class="btn btn-success btn-block btn-lg" />
                    </div>
                </div>
                <div class="form-group">
                    <div class="container-fluid">
                        <div class="col-md-6">
                            <input type="submit" value="Create" class="btn btn-default btn-block btn-lg" id="submitForm" />
                        </div>
                        <div class="col-md-6">
                            @plp_Helpers.GenerateActionLinkButton(Url, "Index", "Blogs", PremierLeaguePortal.Models.ELinkType.BACK, "Back to List")
                        </div>
                    </div>
                    
                </div>
            </div>
    }
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/plp-scripts")
}
