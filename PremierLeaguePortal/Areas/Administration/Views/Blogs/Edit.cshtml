@model PremierLeaguePortal.Areas.Administration.Models.BlogViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Blogs", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Blog</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group form-group-lg">
            @Html.LabelFor(model => model.Header, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Header, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Header, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubHeader, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SubHeader, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SubHeader, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Category, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Content, new { @class = "form-control", rows = "30" })
                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                </div>
                @*@Html.TextAreaFor(model => model.Content, 20, 150, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })*@
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.HeaderImageFile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <a class='btn btn-primary' href='javascript:;'>
                    Browse..
                    <input type="file" 
                           style='position:absolute;z-index:2;top:0;left:0;filter: alpha(opacity=0);-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";opacity:0;background-color:transparent;color:transparent;'  
                           size="40" 
                           id="HeaderImageFile"
                           name="HeaderImageFile"
                           onchange='$("#upload-file-info").html($(this).val());'>
                </a>
                &nbsp;
                <span class='label label-info' id="upload-file-info"></span>
            </div>
        </div>
        @if (Model.HeaderImage != null)
        {
                @Html.LabelFor(model => model.HeaderImage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10 plp-marginbot-twenty">
                    <img src="@Url.Content("~/" + Model.HeaderImage.ImagePhysicalPath)" alt="Image" class="image-tumb" />
                </div>
        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
        @Html.HiddenFor(m => m.CreatedOn)
        @if (Model.HeaderImage != null)
        {
            @Html.HiddenFor(m => m.HeaderImage.CreatedOn)
            @Html.HiddenFor(m => m.HeaderImage.Description)
            @Html.HiddenFor(m => m.HeaderImage.Id)
            @Html.HiddenFor(m => m.HeaderImage.ImageName)
            @Html.HiddenFor(m => m.HeaderImage.ImagePhysicalPath)
            @Html.HiddenFor(m => m.HeaderImage.ImageServerPath)
            @Html.HiddenFor(m => m.HeaderImage.Type)
        }       
    </div>
}

<div>
    
</div>
<div class="btn btn-success btn-block">
    @Html.ActionLink("Back to List", "Index", null, new { @class = "plp-actionlink plp-nopadding" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
